---
/**
 * Pages for Craft's "Example Structure" section
 */

import type { GetStaticPaths } from 'astro';
import { getCollection } from 'astro:content';
import { z } from 'zod';
import config from '@config/sections/exampleStructure';
import fetchAPI from '@lib/craft-cms/fetch-api';
import staticPaths from '@lib/craft-cms/static-paths';
import url from '@lib/craft-cms/url';

/**
 * `Props` interface is tied to Astro.props
 * https://docs.astro.build/en/guides/typescript/#component-props
 */
interface Props {
  data: z.infer<typeof config.schema>;
  entry: z.infer<typeof config.schema.shape.entries.element>;
}

export const getStaticPaths = (async () => {
  const { query, schema, uriPrefix } = config;

  let data = await fetchAPI({ query, schema });

  if (import.meta.env.PROD) {
    const { data: cachedData } = await getCollection(
      'sections__exampleStructure',
    ).then((collection) => collection[0]);

    data = cachedData;
  }

  return await staticPaths<typeof data>({ data, uriPrefix });
}) satisfies GetStaticPaths;

const { data, entry } = Astro.props;
---

<dl>
  <dt>title</dt>
  <dd>{entry.title}</dd>

  <dt>parent title</dt>
  <dd>{entry.parent?.title}</dd>

  <dt>parent URL</dt>
  <dd>{url(entry.parent?.uri)}</dd>

  <dt>children</dt>
  <dd>
    <ul>
      {
        entry?.children.map((child) => (
          <li>
            <dl>
              <dt>title</dt>
              <dd>{child.title}</dd>

              <dt>URL</dt>
              <dd>{url(child.uri)}</dd>
            </dl>
          </li>
        ))
      }
    </ul>
  </dd>
</dl>
