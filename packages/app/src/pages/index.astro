---
interface Entry {
  id: string
  sectionHandle: string
  sectionId: number
  title: string
  typeHandle: string
  typeId: number
  uri: string
}

const response = await fetch("http://astro-craftcms.ddev.site/api",
  {
    method: 'POST',
    headers: {'Content-Type':'application/json'},
    body: JSON.stringify({
      query: `
        query getEntries {
          entries {
            id
            sectionHandle
            sectionId
            title
            typeHandle
            typeId
            uri
          }
        }
      `,
    }),
  });

const json = await response.json();
const { entries }: { entries: Array<Entry> } = json.data;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>All Entries :: astro-craftcms</title>
  </head>
  <body>
    <h1>astro-craftcms</h1>

    <h2>All Entries</h2>

    <table>
      <thead>
        <tr>
          <th>id</th>
          <th>sectionHandle</th>
          <th>sectionId</th>
          <th>title</th>
          <th>typeHandle</th>
          <th>typeId</th>
          <th>uri</th>
          <th>visit</th>
        </tr>
      </thead>
      <tbody>
        {entries.map((entry) => (
          <tr>
            <td>{entry.id}</td>
            <td>{entry.sectionHandle}</td>
            <td>{entry.sectionId}</td>
            <td>{entry.title}</td>
            <td>{entry.typeHandle}</td>
            <td>{entry.typeId}</td>
            <td>{entry.uri}</td>
            <td>
              <a href={`/${entry.uri}`}>Go</a>
            </td>
          </tr>
        ))}
      </tbody>
    </table>
  </body>
</html>
